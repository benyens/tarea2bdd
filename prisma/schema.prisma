// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 

 
model usuarios {
  correo String @id 
  nombre String
  clave String
  descripcion String
  bloqueado Boolean @default(false)
  fecha_creacion DateTime @default(now())
  correosEnviados correos[] @relation(name: "CorreoRemitente")
  correosRecibidos correos[] @relation(name: "CorreoDestinatario")
  direcciones_bloqueadas direcciones_bloqueadas[]
  correosFavoritos correos_favoritos[]
}

model correos {
  id          Int      @id @default(autoincrement())
  remitenteId String
  destinatarioId String
  fecha_envio DateTime @default(now())
  asunto      String
  mensaje     String
  es_favorito Boolean  @default(false)

  remitente   usuarios @relation(name: "CorreoRemitente", fields: [remitenteId], references: [correo])
  destinatario usuarios @relation(name: "CorreoDestinatario", fields: [destinatarioId], references: [correo])
  correos_favoritos correos_favoritos[]
}

model correos_favoritos {
  id Int @id @default(autoincrement())
  usuarioId String
  correoId Int
  es_favorito Boolean @default(true)

  usuario usuarios @relation(fields: [usuarioId], references: [correo])
  correo correos @relation(fields: [correoId], references: [id])
}

model direcciones_bloqueadas {
  id Int @id @default(autoincrement())
  usuarioId String // clave for√°nea
  direccion_bloqueada String

  usuario usuarios @relation(fields: [usuarioId], references: [correo])
}